{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { EmployeeModel } from './employee-dash board.model';\nlet EmployeeDashboardComponent = class EmployeeDashboardComponent {\n  constructor(formbuilder, api) {\n    this.formbuilder = formbuilder;\n    this.api = api;\n    this.employeeModelObj = new EmployeeModel();\n    this.row = '';\n  }\n  ngOnInit() {\n    this.formValue = this.formbuilder.group({\n      firstName: [''],\n      lastName: [''],\n      email: [''],\n      mobile: [''],\n      salary: ['']\n    });\n    this.getAllEmployee();\n  }\n  clickAddEmployee() {\n    this.formValue.reset();\n    this.showAdd = true;\n    this.showUpdate = false;\n  }\n  postEmployeeDetails() {\n    this.employeeModelObj.firstName = this.formValue.value.firstName;\n    this.employeeModelObj.lastName = this.formValue.value.lastName;\n    this.employeeModelObj.email = this.formValue.value.email;\n    this.employeeModelObj.mobile = this.formValue.value.mobile;\n    this.employeeModelObj.salary = this.formValue.value.salary;\n    this.api.postEmployee(this.employeeModelObj).subscribe(res => {\n      console.log(res);\n      alert(\"Employee Added Successfully\");\n      let ref = document.getElementById('cancel');\n      ref?.click();\n      this.formValue.reset();\n      this.getAllEmployee();\n    }, err => {\n      alert(\"Sorry! Something Went Wrong\");\n    });\n  }\n  getAllEmployee() {\n    this.api.getEmployee().subscribe(res => {\n      this.employeeData = res;\n    });\n  }\n  setID(row) {\n    this.row = row;\n    return this.row;\n  }\n  deleteEmployee(row) {\n    this.api.deleteEmployee(row.id).subscribe(res => {\n      alert(\"Employee Deleted\");\n      this.getAllEmployee();\n    });\n  }\n  // deleteEmployee(row:any){\n  //   this.api.deleteEmployee(row.id)\n  //   .subscribe(res=>{\n  //     alert(\"Employee Deleted\");\n  //     // Update the id of remaining employees\n  //     for(let i=0; i<this.employeeData.length; i++){\n  //       if(this.employeeData[i].id > row.id){\n  //         this.employeeData[i].id -= 1;\n  //       }\n  //     }\n  //     this.getAllEmployee();\n  //   })\n  // }\n  OnEdit(row) {\n    this.showAdd = false;\n    this.showUpdate = true;\n    this.employeeModelObj.id = row.id;\n    this.formValue.controls['firstName'].setValue(row.firstName);\n    this.formValue.controls['lastName'].setValue(row.lastName);\n    this.formValue.controls['email'].setValue(row.email);\n    this.formValue.controls['mobile'].setValue(row.mobile);\n    this.formValue.controls['salary'].setValue(row.salary);\n  }\n  updateEmployeeDetails() {\n    this.employeeModelObj.firstName = this.formValue.value.firstName;\n    this.employeeModelObj.lastName = this.formValue.value.lastName;\n    this.employeeModelObj.email = this.formValue.value.email;\n    this.employeeModelObj.mobile = this.formValue.value.mobile;\n    this.employeeModelObj.salary = this.formValue.value.salary;\n    this.api.updateEmployee(this.employeeModelObj, this.employeeModelObj.id).subscribe(res => {\n      alert(\"Updated Successfully\");\n      let ref = document.getElementById('cancel');\n      ref?.click();\n      this.formValue.reset();\n      this.getAllEmployee();\n    });\n  }\n};\nEmployeeDashboardComponent = __decorate([Component({\n  selector: 'app-employee-dashboard',\n  templateUrl: './employee-dashboard.component.html',\n  styleUrls: ['./employee-dashboard.component.css']\n})], EmployeeDashboardComponent);\nexport { EmployeeDashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","EmployeeModel","EmployeeDashboardComponent","constructor","formbuilder","api","ngOnInit","formValue","group","firstName","lastName","email","mobile","salary","getAllEmployee","clickAddEmployee","reset","showAdd","showUpdate","postEmployeeDetails","employeeModelObj","value","postEmployee","subscribe","res","console","log","alert","ref","document","getElementById","click","err","getEmployee","employeeData","setID","row","deleteEmployee","id","OnEdit","controls","setValue","updateEmployeeDetails","updateEmployee","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["G:\\MCA\\Virtusa\\Angular\\AngularCRUD\\src\\app\\employee-dashboard\\employee-dashboard.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormBuilder,FormGroup } from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EmployeeModel } from './employee-dash board.model';\nimport { ApiService } from '../shared/api.service';\n\n\n@Component({\n  selector: 'app-employee-dashboard',\n  templateUrl: './employee-dashboard.component.html',\n  styleUrls: ['./employee-dashboard.component.css']\n})\nexport class EmployeeDashboardComponent implements OnInit {\n\n  formValue !:FormGroup;\n  employeeModelObj: EmployeeModel = new EmployeeModel();\n  employeeData!:any; \n  showAdd!:boolean;\n  showUpdate!:boolean;\n  constructor(private formbuilder:FormBuilder, private api:ApiService){}\n  row='';\n  ngOnInit(): void {\n   this.formValue=this.formbuilder.group({\n    firstName:[''],\n    lastName:[''],\n    email:[''],\n    mobile:[''],\n    salary:['']\n   })\n   this.getAllEmployee();\n  }\n  clickAddEmployee(){\n    this.formValue.reset();\n    this.showAdd=true;\n    this.showUpdate=false;\n  }\n  postEmployeeDetails(){\n    this.employeeModelObj.firstName =this.formValue.value.firstName;\n    this.employeeModelObj.lastName =this.formValue.value.lastName;\n    this.employeeModelObj.email =this.formValue.value.email;\n    this.employeeModelObj.mobile =this.formValue.value.mobile;\n    this.employeeModelObj.salary =this.formValue.value.salary;\n\n    this.api.postEmployee(this.employeeModelObj)\n    .subscribe(res=>{\n      console.log(res);\n      alert(\"Employee Added Successfully\");\n      let ref=document.getElementById('cancel')\n      ref?.click();\n      this.formValue.reset();\n      this.getAllEmployee();\n    },\n    err=>{\n      alert(\"Sorry! Something Went Wrong\")\n    })\n  }\n  getAllEmployee(){\n    this.api.getEmployee()\n    .subscribe(res=>{\n      this.employeeData=res;\n    })\n  }\n  setID(row:any)\n  {\n    this.row=row;\n    return this.row;\n  }\n  deleteEmployee(row:any){\n    this.api.deleteEmployee(row.id)\n    .subscribe(res=>{\n      alert(\"Employee Deleted\");\n      this.getAllEmployee();\n    })\n  }  \n  // deleteEmployee(row:any){\n  //   this.api.deleteEmployee(row.id)\n  //   .subscribe(res=>{\n  //     alert(\"Employee Deleted\");\n  //     // Update the id of remaining employees\n  //     for(let i=0; i<this.employeeData.length; i++){\n  //       if(this.employeeData[i].id > row.id){\n  //         this.employeeData[i].id -= 1;\n  //       }\n  //     }\n  \n  //     this.getAllEmployee();\n  //   })\n  // }\n\n  OnEdit(row:any){\n    this.showAdd=false;\n    this.showUpdate=true;\n    this.employeeModelObj.id=row.id;\n    this.formValue.controls['firstName'].setValue(row.firstName);\n    this.formValue.controls['lastName'].setValue(row.lastName);\n    this.formValue.controls['email'].setValue(row.email);\n    this.formValue.controls['mobile'].setValue(row.mobile);\n    this.formValue.controls['salary'].setValue(row.salary);\n  }\n  updateEmployeeDetails(){\n    this.employeeModelObj.firstName =this.formValue.value.firstName;\n    this.employeeModelObj.lastName =this.formValue.value.lastName;\n    this.employeeModelObj.email =this.formValue.value.email;\n    this.employeeModelObj.mobile =this.formValue.value.mobile;\n    this.employeeModelObj.salary =this.formValue.value.salary;\n    this.api.updateEmployee(this.employeeModelObj,this.employeeModelObj.id)\n    .subscribe(res=>{\n      alert(\"Updated Successfully\");\n      let ref=document.getElementById('cancel')\n      ref?.click();\n      this.formValue.reset();\n      this.getAllEmployee();\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}